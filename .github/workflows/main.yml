# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '11.x'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
        env:
          CI: true #shows terminal output
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploying to VM
        uses: appleboy/ssh-action@master # An action made to controlinux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          host: ${{ secrets.HOST}} 
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/git/JPMC-tech-task-2-PY3 # we move into our app's folder
            git pull # we pull any changes from git
            npm prune # we remove any unused dependencies
            npm install # we install any missing dependencies
            npm run build # we build our app
            pm2 reload all # we reload the app via PM2
